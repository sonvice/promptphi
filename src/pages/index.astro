---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import HeroTitle from "../components/HeroTitle.astro";

import Prompt from "../components/Prompt.astro";
import { getCollection } from "astro:content";
import Newsetter from "../components/Newsetter.astro";
import TagHero from "../components/TagHero.astro";
const prompts = await getCollection("prompt");
//Copiando cada tags en un solo array de tags
const tags = prompts.map((tag) => [...tag.data.tags]);
//Uniendo cada array de tag de cada publicaciÃ³n de prompt
const joinArr = tags.reduce((acc, item) => {
  return acc.concat(item);
}, []);
//Quitando duplicados y copiando en un nuevo array
const setTags = [...new Set(joinArr)];
---

<!doctype html>
<html lang="es">
  <head>
    <!-- Google tag (gtag.js) -->
    <script type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-98F656TD2V"
    ></script>
    <script type="text/partytown">
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-98F656TD2V");
    </script>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header title={SITE_TITLE} />
    <main class="py-space-2xl">
      <div id="particles-js"></div>
      <div class="count-particles">
        <span class="js-count-particles"></span>
      </div>
      <HeroTitle />

      <TagHero setTags={setTags} clases={["container mt-space-2xl"]} />

      {
        setTags.map((tag) => (
          <ul role="list" id={tag} class="list-prompt | container">
            <li
              id={`${tag
                .split(" ")
                .join("-")
                .toLocaleLowerCase()
                .normalize("NFD")
                .replace(/[\u0300-\u036f]/g, "")}`}
              class="list-prompt__title | size-2"
            >
              {tag}
            </li>

            {prompts.map((prompt, index) =>
              prompt.data.tags.includes(tag) ? (
                <li role="listitem">
                  <Prompt title={prompt.data.title} prompt={prompt.body} />
                </li>
              ) : null
            )}
          </ul>
        ))
      }
    </main>
    <div>
      <Newsetter />
    </div>
    <Footer />

    <script
      is:inline
      src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"
    ></script>

    <script>
      document.addEventListener(
        "astro:page-load",
        () => {
          const particlesContainer = document.querySelector("#particles-js");
          // Esto solo se ejecuta una vez.
          if (particlesContainer) {
            particlesJS("particles-js", {
              particles: {
                number: {
                  value: 80,
                  density: {
                    enable: true,
                    value_area: 800,
                  },
                },
                color: {
                  value: "#ffffff",
                },
                shape: {
                  type: "circle",
                  stroke: {
                    width: 0,
                    color: "#000000",
                  },
                  polygon: {
                    nb_sides: 5,
                  },
                  image: {
                    src: "img/github.svg",
                    width: 100,
                    height: 100,
                  },
                },
                opacity: {
                  value: 0.5,
                  random: false,
                  anim: {
                    enable: false,
                    speed: 1,
                    opacity_min: 0.1,
                    sync: false,
                  },
                },
                size: {
                  value: 3,
                  random: true,
                  anim: {
                    enable: false,
                    speed: 40,
                    size_min: 0.1,
                    sync: false,
                  },
                },
                line_linked: {
                  enable: true,
                  distance: 150,
                  color: "#ffffff",
                  opacity: 0.4,
                  width: 1,
                },
                move: {
                  enable: true,
                  speed: 6,
                  direction: "none",
                  random: false,
                  straight: false,
                  out_mode: "out",
                  bounce: false,
                  attract: {
                    enable: false,
                    rotateX: 600,
                    rotateY: 1200,
                  },
                },
              },
              interactivity: {
                detect_on: "canvas",
                events: {
                  onhover: {
                    enable: true,
                    mode: "repulse",
                  },
                  onclick: {
                    enable: true,
                    mode: "push",
                  },
                  resize: true,
                },
                modes: {
                  grab: {
                    distance: 400,
                    line_linked: {
                      opacity: 1,
                    },
                  },
                  bubble: {
                    distance: 400,
                    size: 40,
                    duration: 2,
                    opacity: 8,
                    speed: 3,
                  },
                  repulse: {
                    distance: 200,
                    duration: 0.4,
                  },
                  push: {
                    particles_nb: 4,
                  },
                  remove: {
                    particles_nb: 2,
                  },
                },
              },
              retina_detect: true,
            });
          }
        },
        { once: false }
      );
    </script>
  </body>
</html>
